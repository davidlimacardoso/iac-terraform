name: Provisionning IaC
'on':
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**

env:
  # TF_VAR_env: ${{ github.event.inputs.env }}
  BUKET_TF_STATE: ${{ secrets.BUKET_TF_STATE }}
  EKS_CLUSTER: ${{ secrets.EKS_CLUSTER }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  terraform:
    name: Apply Terraform Code Changes
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Autenticar na AWS
        uses: aws-actions/configure-aws-credentials@v4
        with: 
            role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/${{ secrets.AWS_ROLE }}
            aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform with specifc version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init -backend-config="bucket=${BUKET_TF_STATE}"
          -backend-config="key=terraform.tfstate"

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile -var-file=terraform.tfvars -out=tfplan
        continue-on-error: true

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1
        
